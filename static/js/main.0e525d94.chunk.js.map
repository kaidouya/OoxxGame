{"version":3,"sources":["SvgLine.js","Ooxx.js","index.js"],"names":["SvgBody","styled","svg","_templateObject","props","_props$children$props","children","x1","x2","y1","y2","d","Math","sqrt","console","log","SvgLine","_this","Object","classCallCheck","this","positionInfo","possibleConstructorReturn","getPrototypeOf","call","winnerGroup","state","startX","slice","startY","floor","endX","endY","react_default","a","createElement","className","stroke","strokeWidth","Component","CheckerBoard","div","Ooxx_templateObject","BoxBody","span","_templateObject2","Player","_templateObject3","PlayerSpan","_templateObject4","ResetBtn","button","_templateObject5","winnerLine","giveOx","n","Ooxx","resetBtn","setState","preState","boxArray","winner","whichPlay","index","_this2","newBoxArray","toConsumableArray","grid","_i","_winnerLine","length","items","_items","slicedToArray","i","j","k","w1","w2","prevProps","getWinnerInfo","whosWinner","_this3","_this$state","react","map","element","key","onClick","clickHandle","bind","src_SvgLine","ReactDOM","render","src_Ooxx","document","getElementById"],"mappings":"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","file":"static/js/main.0e525d94.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nconst SvgBody = styled.svg`\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  width: 450px;\n  height: 450px;\n  .line {\n    stroke-dasharray: 0 1000;\n    animation: dasharray 1s forwards;\n  }\n  @keyframes dasharray {\n    from {\n      stroke-dasharray: 0 1000;\n    }\n    to {\n      stroke-dasharray: ${props => {\n          // 自己來算兩點之間的距離\n          let { x1, x2, y1, y2 } = props.children.props;\n          let d = Math.sqrt((x2 -= x1) * x2 + (y2 -= y1) * y2);\n          console.log('兩點之間的距離:' + d);\n          return d;\n        }}\n        1000;\n    }\n  }\n`;\n\nclass SvgLine extends Component {\n  constructor(props) {\n    super(props);\n\n    let positionInfo = this.props.winnerGroup;\n\n    console.log('這些格子取得勝利：' + positionInfo);\n    this.state = {\n      positionInfo: positionInfo\n    };\n  }\n\n  render() {\n    const number01 = 148; // 方格的寬\n    const number02 = 74; // 方格寬的一半\n    const startX = this.state.positionInfo.slice(0, 1) % 3;\n    const startY = Math.floor(this.state.positionInfo.slice(0, 1) / 3);\n    const endX = this.state.positionInfo.slice(-1) % 3;\n    const endY = Math.floor(this.state.positionInfo.slice(-1) / 3);\n    console.log(\n      '開始位置x：' +\n        (startX * number01 + number02) +\n        '開始位置Y：' +\n        (startY * number01 + number02)\n    );\n    console.log(\n      '結束位置x：' +\n        (endX * number01 + number02) +\n        '結束位置Y：' +\n        (endY * number01 + number02)\n    );\n    console.log('好難算阿 ㄇㄉ勒');\n    return (\n      <SvgBody>\n        <line\n          className='line'\n          x1={startX * number01 + number02}\n          y1={startY * number01 + number02}\n          x2={endX * number01 + number02}\n          y2={endY * number01 + number02}\n          stroke='red'\n          strokeWidth='5'\n        />\n      </SvgBody>\n    );\n  }\n}\n\nexport default SvgLine;\n","import React, { Component, Fragment } from 'react';\nimport styled from 'styled-components';\nimport SvgLine from './SvgLine';\n\nconst CheckerBoard = styled.div`\n  position: relative;\n  display: flex;\n  flex-flow: row wrap;\n  align-content: flex-start;\n  width: 450px;\n  height: 450px;\n  margin: 0 auto;\n`;\n\nconst BoxBody = styled.span`\n  flex-basis: 33%;\n  height: 33%;\n  border: 1px solid #ccc;\n  margin: -1px 0 0 -1px;\n  box-sizing: border-box;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-family: sans-serif;\n  font-size: 60px;\n  color: #666;\n  cursor: pointer;\n  user-select: none;\n`;\n\nconst Player = styled.span`\n  display: block;\n  color: #0cc;\n  font-size: 1rem;\n  text-align: center;\n`;\n\nconst PlayerSpan = styled(Player)`\n  display: inline-block;\n  color: #85bf21;\n  font-weight: bold;\n  font-size: 2rem;\n`;\n\nconst ResetBtn = styled.button`\n  display: block;\n  margin: 20px auto 0;\n  width: 300px;\n  height: 50px;\n  color: #555;\n  border-radius: 15px;\n`;\n\n// 成功連線有哪些組合\nconst winnerLine = [\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n  [0, 3, 6],\n  [1, 4, 7],\n  [2, 5, 8],\n  [0, 4, 8],\n  [2, 4, 6]\n];\n\n// 丟值函式\nconst giveOx = n => {\n  switch (n) {\n    case 0:\n      return '';\n    case 1:\n      return '0';\n    case -1:\n      return 'X';\n    default:\n      return '';\n  }\n};\n\nclass Ooxx extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      boxArray: [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      whichPlay: 1,\n      winner: null,\n      winnerGroup: [] // 獲勝組合\n    };\n  }\n\n  // 點擊事件\n  clickHandle(index) {\n    if (this.state.winner !== null) return;\n    const newBoxArray = [...this.state.boxArray];\n    // 防止重複點擊\n    if (newBoxArray[index] !== 0) {\n      return;\n    }\n    newBoxArray[index] = this.state.whichPlay;\n    this.setState(preState => {\n      return {\n        boxArray: newBoxArray,\n        whichPlay: -this.state.whichPlay\n      };\n    });\n  }\n\n  // 檢查是否已經出現贏家 + 並且記錄是哪種組合所勝出\n  whosWinner() {\n    const grid = this.state.boxArray;\n    for (const items of winnerLine) {\n      const [i, j, k] = items;\n      if (grid[i] === grid[j] && grid[j] === grid[k] && grid[i] !== 0) {\n        return {\n          w1: grid[i],\n          w2: [i, j, k]\n        };\n      }\n    }\n    return null;\n  }\n\n  // 重新開始\n  resetBtn = () => {\n    this.setState(preState => {\n      return {\n        boxArray: [0, 0, 0, 0, 0, 0, 0, 0, 0],\n        winner: null\n      };\n    });\n  };\n\n  // 當更新時檢查是否已經結束\n  componentDidUpdate(prevProps, preState) {\n    // 防止無窮迴圈\n    if (preState.boxArray !== this.state.boxArray) {\n      // 確認是否有贏家出現\n      const getWinnerInfo = this.whosWinner();\n      if (getWinnerInfo !== null) {\n        this.setState(preState => {\n          return {\n            winner: getWinnerInfo.w1,\n            winnerGroup: getWinnerInfo.w2\n          };\n        });\n      }\n    }\n  }\n\n  render() {\n    const { boxArray, whichPlay, winner, winnerGroup } = this.state;\n    return (\n      <Fragment>\n        <CheckerBoard>\n          {boxArray.map((element, index) => {\n            return (\n              <BoxBody key={index} onClick={this.clickHandle.bind(this, index)}>\n                {giveOx(element)}\n              </BoxBody>\n            );\n          })}\n          {winner !== null ? <SvgLine winnerGroup={winnerGroup} /> : null}\n        </CheckerBoard>\n        <Player>\n          現在是誰在玩：\n          <PlayerSpan>\n            {winner !== null ? '結束了啦！' : giveOx(whichPlay)}\n          </PlayerSpan>\n        </Player>\n        <Player>\n          目前贏家是：<PlayerSpan>{giveOx(winner)}</PlayerSpan>\n        </Player>\n        <ResetBtn onClick={this.resetBtn}>重新開始</ResetBtn>\n      </Fragment>\n    );\n  }\n}\n\nexport default Ooxx;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Ooxx from './Ooxx';\n\nReactDOM.render(<Ooxx />, document.getElementById('root'));\n"],"sourceRoot":""}